import 'dart:convert';
import 'dart:io';

import 'package:mason_logger/mason_logger.dart';

final _logger = Logger();

void main() async {
  _logger.info('Generating audio assets...');

  const audioFiles = {
    'imperialMarch': 'assets/dart_vader_imperial_theme.mp3',
    'vaderBreathing': 'assets/dart_vader_breathing.mp3',
    'vaderNo': 'assets/dart_vader_no.mp3',
    'vaderImYourFather': 'assets/dart_vader_im_your_father.mp3',
    'doom': 'assets/doom.flf',
  };

  _logger.info('Reading audio files...');

  final buffer =
      StringBuffer()..writeln('''
  // File generated by build_runner, do not edit manually.
  import 'dart:convert';
  import 'dart:typed_data';

  /// Audio assets for the package.
  class AOTAssets {
    static const String imperialMarchKey = 'dart_vader_imperial_theme';
    static const String vaderBreathingKey = 'dart_vader_breathing';
    static const String vaderNoKey = 'dart_vader_no';
    static const String vaderImYourFatherKey = 'dart_vader_im_your_father';
    static const String doomKey = 'doom';

    /// Map of all available audio assets
    static final Map<String, Uint8List> assetMap = {
      imperialMarchKey: imperialMarch,
      vaderBreathingKey: vaderBreathing,
      vaderNoKey: vaderNo,
      vaderImYourFatherKey: vaderImYourFather,
      doomKey: doom,
    };
  ''');

  _logger.info('Processing audio files...');

  for (final entry in audioFiles.entries) {
    final file = File(entry.value);
    final bytes = await file.readAsBytes();
    final base64Data = base64Encode(bytes);

    buffer.writeln(
      '   static final Uint8List ${entry.key} = base64Decode("$base64Data");',
    );
  }

  buffer.writeln('}');
  _logger.info('Writing to file...');

  await File(
    'lib/src/constants/audio_assets.dart',
  ).writeAsString(buffer.toString());

  _logger.success('Done!');
}
